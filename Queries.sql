-- Sales & Revenue
-- What is the total revenue generated by the store?
SELECT Round(Sum(total), 2) AS total_revenue
FROM invoice;

-- What is the average revenue per invoice?
SELECT Round(Avg(total), 2) AS average_revenue_per_invoice
FROM invoice;

-- What are the top 5 highest-grossing invoices?
SELECT TOP 5 invoice_id
	,Round(total, 2) AS total
FROM invoice
ORDER BY total DESC;

-- Which customers have spent the most money?
SELECT TOP 5 c.customer_id
	,c.first_name
	,c.last_name
	,Round(Sum(i.total), 2) AS totalspent
FROM customer AS c
INNER JOIN invoice AS i
	ON c.customer_id = i.customer_id
GROUP BY c.customer_id
	,c.first_name
	,c.last_name
ORDER BY totalspent DESC;

--What are the top 5 countries by total revenue?
SELECT TOP 5 billing_country AS country
	,Round(Sum(total), 2) AS total_revenue
FROM invoice
GROUP BY billing_country
ORDER BY total_revenue DESC;

--What is the average revenue per customer by country?
SELECT TOP 5 billing_country AS country
	,ROUND(SUM(total) * 1.0 / COUNT(DISTINCT customer_id), 2) AS avg_revenue_per_customer
	,Round(Sum(total), 2) AS total_revenue
FROM invoice
GROUP BY billing_country
ORDER BY total_revenue DESC;

--Which month had the highest sales?
SELECT TOP 1 Datename(month, invoice_date) AS MonthName
	,Round(Sum(total), 2) AS totalsales
FROM invoice
GROUP BY Datename(month, invoice_date)
ORDER BY totalsales DESC;

-- How many invoices are generated per country?
SELECT billing_country AS country
	,Count(*) AS invoices_generated_per_country
FROM invoice
GROUP BY billing_country
ORDER BY invoices_generated_per_country DESC;

-- What is the revenue generated by each genre?
SELECT g.NAME AS genre
	,Round(Sum(i.total), 2) AS revenue
FROM invoice i
INNER JOIN invoice_line il
	ON i.invoice_id = il.invoice_id
INNER JOIN track t
	ON il.track_id = t.track_id
INNER JOIN genre g
	ON t.genre_id = g.genre_id
GROUP BY g.NAME;

-- Which media type generates the highest revenue?
SELECT TOP 1 m.NAME AS media_type
	,Round(Sum(i.total), 2) AS revenue
FROM invoice i
INNER JOIN invoice_line il
	ON i.invoice_id = il.invoice_id
INNER JOIN track t
	ON il.track_id = t.track_id
INNER JOIN media_type m
	ON t.media_type_id = m.media_type_id
GROUP BY m.NAME;

--Customer Insights
-- How many customers are there per country?
SELECT country
	,Count(DISTINCT customer_id) AS customers_numbers
FROM customer
GROUP BY country
ORDER BY customers_numbers DESC;

--What is the average customer lifetime value (total revenue per customer)?
SELECT c.first_name
	,c.last_name
	,Round(Sum(i.total), 2) AS revenue_per_customer
FROM invoice i
INNER JOIN customer AS c
	ON c.customer_id = i.customer_id
GROUP BY c.first_name
	,c.last_name
ORDER BY revenue_per_customer DESC;

-- Who are the top 10 customers by total invoice amount?
SELECT TOP 10 c.first_name
	,c.last_name
	,Round(Sum(i.total), 2) AS revenue_per_customer
FROM invoice i
INNER JOIN customer AS c
	ON c.customer_id = i.customer_id
GROUP BY c.first_name
	,c.last_name
ORDER BY revenue_per_customer DESC;

-- Which city has the most active customers?
SELECT TOP 1 city
	,Count(DISTINCT customer_id) AS customers_numbers
FROM customer
GROUP BY city
ORDER BY customers_numbers DESC;

-- What is the average number of invoices per customer?
SELECT ROUND(SUM(total) * 1.0 / COUNT(DISTINCT customer_id), 2) AS avg_revenue_per_customer
FROM invoice;

-- How many customers made more than 5 purchases?
SELECT COUNT(*) AS customer_count
FROM (
    SELECT i.customer_id
    FROM invoice i
    GROUP BY i.customer_id
    HAVING COUNT(i.invoice_id) > 5
) AS filtered_customers;

-- Which customers have not made any purchases recently (e.g., last 6 months)?
SELECT c.first_name
	,c.last_name
FROM customer c
LEFT JOIN invoice i
	ON c.customer_id = i.customer_id
GROUP BY c.first_name
	,c.last_name
HAVING Max(i.invoice_date) IS NULL
	OR Max(i.invoice_date) < Dateadd(month, - 6, Getdate());

-- What are the top countries in terms of customer count and revenue per customer?
SELECT TOP 5 billing_country AS country
	,Count(DISTINCT customer_id) AS customer_count
	,Round(Sum(total) * 1.0 / Count(DISTINCT customer_id), 2) AS revenue_per_customer
FROM invoice
GROUP BY billing_country
ORDER BY customer_count DESC
	,revenue_per_customer DESC;

-- Track & Genre Analysis
-- What are the top 10 most purchased tracks
SELECT t.NAME AS track_name
	,Count(*) AS times_purchased
FROM invoice i
INNER JOIN invoice_line il
	ON i.invoice_id = il.invoice_id
INNER JOIN track t
	ON il.track_id = t.track_id
GROUP BY t.NAME
ORDER BY times_purchased DESC;

-- What are the most popular genres by track count sold?
SELECT g.NAME AS genre
	,Count(*) AS times_sold
FROM invoice i
INNER JOIN invoice_line il
	ON i.invoice_id = il.invoice_id
INNER JOIN track t
	ON il.track_id = t.track_id
INNER JOIN genre g
	ON t.genre_id = g.genre_id
GROUP BY g.NAME
ORDER BY times_sold DESC;

-- What is the total number of tracks sold per genre?
SELECT g.NAME AS genre
	,sum(il.quantity) AS tracks_sold
FROM invoice i
INNER JOIN invoice_line il
	ON i.invoice_id = il.invoice_id
INNER JOIN track t
	ON il.track_id = t.track_id
INNER JOIN genre g
	ON t.genre_id = g.genre_id
GROUP BY g.NAME
ORDER BY tracks_sold DESC;

-- What is the total revenue by track?
SELECT t.NAME AS track_name
	,Round(Sum(i.total), 2) AS total_revenue
FROM invoice i
INNER JOIN invoice_line il
	ON i.invoice_id = il.invoice_id
INNER JOIN track t
	ON il.track_id = t.track_id
GROUP BY t.NAME
ORDER BY total_revenue DESC;

-- What is the average track length per genre?
SELECT g.NAME AS genre
	,Cast(Round(Avg(t.milliseconds) / 60000.0, 2) AS DECIMAL(10, 2)) AS average_length_minutes
FROM track t
INNER JOIN genre g
	ON t.genre_id = g.genre_id
GROUP BY g.NAME
ORDER BY average_length_minutes DESC;

-- Which genres are the most profitable?
SELECT g.NAME AS genre
	,Round(Sum(i.total), 2) AS total_revenue
FROM invoice i
INNER JOIN invoice_line il
	ON i.invoice_id = il.invoice_id
INNER JOIN track t
	ON il.track_id = t.track_id
INNER JOIN genre g
	ON t.genre_id = g.genre_id
GROUP BY g.NAME
ORDER BY total_revenue DESC;

-- What is the most expensive track ever sold?
SELECT TOP 1 t.name AS most_expensive_track_ever_sold
	, il.unit_price
from invoice_line il
INNER JOIN track t
	ON il.track_id = t.track_id
ORDER BY il.unit_price DESC;

-- What is the average price per media type?
SELECT m.NAME AS media_type
	,Round(Avg(il.unit_price), 2) AS average_price
FROM invoice i
INNER JOIN invoice_line il
	ON i.invoice_id = il.invoice_id
INNER JOIN track t
	ON il.track_id = t.track_id
INNER JOIN media_type m
	ON t.media_type_id = m.media_type_id
GROUP BY m.NAME
ORDER BY average_price DESC;

-- Invoice & Transaction Insights
-- How many tracks are included in each invoice?
SELECT i.invoice_id
	,Count(il.track_id) AS tracks_number
FROM invoice i
INNER JOIN invoice_line il
	ON i.invoice_id = il.invoice_id
GROUP BY i.invoice_id
ORDER BY tracks_number DESC;

-- What is the average number of tracks per invoice?
SELECT Round(Avg(track_count), 2) AS average_tracks_per_invoice
FROM (
	SELECT i.invoice_id
		,Count(il.invoice_line_id) AS track_count
	FROM invoice i
	INNER JOIN invoice_line il
		ON i.invoice_id = il.invoice_id
	GROUP BY i.invoice_id
	) AS sub;

-- Which invoice had the highest number of tracks?
SELECT TOP 1 invoice_id
FROM (
	SELECT i.invoice_id
		,Count(il.invoice_line_id) AS track_count
	FROM invoice i
	INNER JOIN invoice_line il
		ON i.invoice_id = il.invoice_id
	GROUP BY i.invoice_id
	) AS sub
ORDER BY sub.track_count DESC;

-- Which country has the highest average invoice total?
SELECT TOP 1 billing_country
	,Round(Avg(total), 2) AS average_invoice_total
FROM invoice
GROUP BY billing_country
ORDER BY average_invoice_total DESC;

-- What is the trend of monthly invoice totals?
SELECT Datename(month, invoice_date) AS month
	,Round(Sum(total), 2) AS invoice_total
FROM invoice
GROUP BY Datename(month, invoice_date)
	,Month(invoice_date)
ORDER BY Month(invoice_date) ASC;